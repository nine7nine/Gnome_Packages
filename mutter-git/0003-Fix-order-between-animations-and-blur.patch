From dcb8926a61326af71e12c2bfdb45e720f97387b7 Mon Sep 17 00:00:00 2001
From: ninez <johnstonljordan@gmail.com>
Date: Thu, 6 Jan 2022 14:27:46 -0500
Subject: [PATCH 3/3] Fix order between animations and blur

 - The Mutter-Rounded code is broken with animations. For whatever reason the
   developer hooked their function to remove blur into the
   meta_window_actor_after_effects() function. meaning blur would be the last
   thing removed -- this looks awful and leads to blurred window artifacts.

 - I've added two functions and hooked into start_simple_effect(). this way, the
   blur is removed BEFORE the animation transition, which looks 100x better. No
   more blurred artifacts and it's fast.

 - however, unminimized windows still showed blurred artifacts (as now the blur
   would show first). I worked around this by adding;

 -  if (priv->visible)
 +  if (priv->visible && !priv->unminimize_in_progress)

   ...in various places. Now the blur never shows first, *except when;

 - bug: blur appears first, when new window is drawn. This is minor, but i plan
   to fix this too.

Signed-off-by: ninez <johnstonljordan@gmail.com>
---
 src/compositor/meta-window-actor.c | 87 ++++++++++++++++++++++--------
 1 file changed, 65 insertions(+), 22 deletions(-)

diff --git a/src/compositor/meta-window-actor.c b/src/compositor/meta-window-actor.c
index 0f7b82f27..6cd4a4836 100644
--- a/src/compositor/meta-window-actor.c
+++ b/src/compositor/meta-window-actor.c
@@ -670,7 +670,7 @@ on_visible_changed (MetaWindowActor *self)
   if (!priv->blur_actor)
     return;
 
-  if (priv->visible)
+  if (priv->visible && !priv->unminimize_in_progress)
     clutter_actor_show(priv->blur_actor);
   else
     clutter_actor_hide(priv->blur_actor);
@@ -906,6 +906,51 @@ is_freeze_thaw_effect (MetaPluginEffect event)
   }
 }
 
+static void
+meta_window_actor_remove_blur (MetaWindowActor *self)
+{
+  MetaWindowActorPrivate *priv =
+    meta_window_actor_get_instance_private (self);
+
+  if (!priv->blur_actor)
+    return;
+
+  ClutterActor *parent = clutter_actor_get_parent (CLUTTER_ACTOR (self));
+  clutter_actor_remove_effect (priv->blur_actor, CLUTTER_EFFECT (priv->blur_effect));
+  clutter_actor_remove_child (parent, priv->blur_actor);
+}
+
+static void
+meta_window_actor_hide_blur (MetaWindowActor *self)
+{
+  MetaWindowActorPrivate *priv =
+    meta_window_actor_get_instance_private (self);
+
+  if (!priv->blur_actor)
+    return;
+
+  // hide the blur effect 
+  clutter_actor_hide(priv->blur_actor);
+}
+
+static void
+meta_window_actor_show_blur (MetaWindowActor *self)
+{
+  MetaWindowActorPrivate *priv =
+    meta_window_actor_get_instance_private (self);
+
+  if (!priv->blur_actor)
+    return;
+
+  // show the blur effect
+  meta_shell_blur_effect_set_mode (priv->blur_effect, SHELL_BLUR_MODE_BACKGROUND);
+  clutter_actor_add_effect_with_name (priv->blur_actor,
+                                      "ShellBlurEffect",
+                                      CLUTTER_EFFECT(priv->blur_effect));
+    if (priv->visible && !priv->unminimize_in_progress)
+    clutter_actor_show(priv->blur_actor);
+}
+
 static gboolean
 start_simple_effect (MetaWindowActor  *self,
                      MetaPluginEffect  event)
@@ -925,15 +970,29 @@ start_simple_effect (MetaWindowActor  *self,
   case META_PLUGIN_NONE:
     return FALSE;
   case META_PLUGIN_MINIMIZE:
+      if (priv->round_clip_effect)
+        {
+          meta_window_actor_hide_blur(self);
+        }
     counter = &priv->minimize_in_progress;
     break;
   case META_PLUGIN_UNMINIMIZE:
+      if (priv->round_clip_effect)
+        {
+          meta_window_actor_hide_blur(self);
+        }
     counter = &priv->unminimize_in_progress;
     break;
   case META_PLUGIN_MAP:
     counter = &priv->map_in_progress;
     break;
   case META_PLUGIN_DESTROY:
+      if (priv->round_clip_effect)
+        {
+          clutter_actor_remove_effect (CLUTTER_ACTOR(self),
+                                       CLUTTER_EFFECT(priv->round_clip_effect));
+          meta_window_actor_remove_blur(self);
+        }
     counter = &priv->destroy_in_progress;
     break;
   case META_PLUGIN_SIZE_CHANGE:
@@ -962,20 +1021,6 @@ start_simple_effect (MetaWindowActor  *self,
   return TRUE;
 }
 
-static void
-meta_window_actor_remove_blur (MetaWindowActor *self)
-{
-  MetaWindowActorPrivate *priv =
-    meta_window_actor_get_instance_private (self);
-
-  if (!priv->blur_actor)
-    return;
-
-  ClutterActor *parent = clutter_actor_get_parent (CLUTTER_ACTOR (self));
-  clutter_actor_remove_effect (priv->blur_actor, CLUTTER_EFFECT (priv->blur_effect));
-  clutter_actor_remove_child (parent, priv->blur_actor);
-}
-
 static void
 meta_window_actor_after_effects (MetaWindowActor *self)
 {
@@ -989,12 +1034,6 @@ meta_window_actor_after_effects (MetaWindowActor *self)
 
   if (priv->needs_destroy)
     {
-      if (priv->round_clip_effect)
-        {
-          clutter_actor_remove_effect (CLUTTER_ACTOR(self),
-                                       CLUTTER_EFFECT(priv->round_clip_effect));
-          meta_window_actor_remove_blur(self);
-        }
       clutter_actor_destroy (CLUTTER_ACTOR (self));
     }
   else
@@ -1002,6 +1041,10 @@ meta_window_actor_after_effects (MetaWindowActor *self)
       g_signal_emit (self, signals[EFFECTS_COMPLETED], 0);
       meta_window_actor_sync_visibility (self);
       meta_window_actor_sync_actor_geometry (self, FALSE);
+      if (priv->round_clip_effect && !priv->unminimize_in_progress)
+        {
+         meta_window_actor_show_blur(self);
+        } 
     }
 
   clutter_stage_repick_device (stage, clutter_seat_get_pointer (seat));
@@ -1364,7 +1407,7 @@ meta_window_actor_sync_visibility (MetaWindowActor *self)
 
   if (CLUTTER_ACTOR_IS_VISIBLE (self) != priv->visible)
     {
-      if (priv->visible)
+      if (priv->visible && !priv->unminimize_in_progress)
         clutter_actor_show (CLUTTER_ACTOR (self));
       else
         clutter_actor_hide (CLUTTER_ACTOR (self));
-- 
2.34.1

