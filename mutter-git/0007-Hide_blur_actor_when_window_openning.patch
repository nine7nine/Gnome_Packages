From a4a4829b136f521b4a422b6091cea86a40d37e3d Mon Sep 17 00:00:00 2001
From: LuoYi <langisme@qq.com>
Date: Mon, 10 Jan 2022 15:09:31 +0800
Subject: [PATCH] Hide blur actor when window openning.

Needn't on_visible_changed() callback any more. Because
meta_window_actor_hide_blur() and meta_window_actor_show_blur() have
dealt with it.

When window is opening, just hide blur actor during transition, by adding
meta_window_actor_hide_blur() at `case META_PLUGIN_MAP` in
start_simple_effect()
---
 src/compositor/meta-window-actor.c | 23 ++++-------------------
 1 file changed, 4 insertions(+), 19 deletions(-)

diff --git a/src/compositor/meta-window-actor.c b/src/compositor/meta-window-actor.c
index 932b2904de..5d6cdcc627 100644
--- a/src/compositor/meta-window-actor.c
+++ b/src/compositor/meta-window-actor.c
@@ -65,7 +65,6 @@ typedef struct _MetaWindowActorPrivate
   ClutterActor *blur_actor;
   MetaShellBlurEffect *blur_effect;
 
-  ulong visible_changed_id;
   ulong wm_class_changed_id;
   int geometry_scale;
 
@@ -662,20 +661,6 @@ init_surface_actor (MetaWindowActor *self)
     meta_window_actor_assign_surface_actor (self, surface_actor);
 }
 
-static void
-on_visible_changed (MetaWindowActor *self)
-{
-  MetaWindowActorPrivate *priv = meta_window_actor_get_instance_private (self);
-  
-  if (!priv->blur_actor)
-    return;
-
-  if (priv->visible && !priv->unminimize_in_progress)
-    clutter_actor_show(priv->blur_actor);
-  else
-    clutter_actor_hide(priv->blur_actor);
-}
-
 static void
 on_wm_class_changed (MetaWindow *self,
                      gpointer    user_data)
@@ -714,9 +699,6 @@ meta_window_actor_constructed (GObject *object)
 
   meta_window_actor_sync_actor_geometry (self, priv->window->placed);
 
-  priv->visible_changed_id = 
-    g_signal_connect (object, "notify::visible", G_CALLBACK (on_visible_changed), NULL);
-
   if (type == META_WINDOW_CLIENT_TYPE_WAYLAND)
   {
     priv->wm_class_changed_id =
@@ -740,7 +722,6 @@ meta_window_actor_dispose (GObject *object)
 
   priv->disposed = TRUE;
 
-  g_clear_signal_handler(&priv->visible_changed_id, object);
   meta_compositor_remove_window_actor (compositor, self);
 
   g_clear_object (&priv->window);
@@ -980,6 +961,10 @@ start_simple_effect (MetaWindowActor  *self,
     counter = &priv->unminimize_in_progress;
     break;
   case META_PLUGIN_MAP:
+      if (priv->round_clip_effect)
+        {
+          meta_window_actor_hide_blur(self);
+        }
     counter = &priv->map_in_progress;
     break;
   case META_PLUGIN_DESTROY:

