From 687f0c58fdc31a13f2c76c59925d0428444c1ff4 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Jonas=20Dre=C3=9Fler?= <verdre@v0yd.nl>
Date: Fri, 5 Mar 2021 11:31:26 +0100
Subject: [PATCH 1/6] st/entry: Invalidate shadow on cursor position/size
 changes

The text-shadow is affected by cursor changes, too, so we should update
it case that changes.
---
 src/st/st-entry.c | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/src/st/st-entry.c b/src/st/st-entry.c
index a8edb2de4d..02c190158e 100644
--- a/src/st/st-entry.c
+++ b/src/st/st-entry.c
@@ -539,7 +539,11 @@ static void
 clutter_text_cursor_changed (ClutterText *text,
                              StEntry     *entry)
 {
+  StEntryPrivate *priv = ST_ENTRY_PRIV (entry);
+
   st_entry_update_hint_visibility (entry);
+
+  g_clear_pointer (&priv->text_shadow_material, cogl_object_unref);
 }
 
 static void
-- 
GitLab


From 96d200822d5e3597feef9704ba9ebef96b151178 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Jonas=20Dre=C3=9Fler?= <verdre@v0yd.nl>
Date: Fri, 5 Mar 2021 12:17:07 +0100
Subject: [PATCH 2/6] st/entry: Invalidate text shadow on style changes to
 ClutterText

We update a few properties of ClutterText when the CSS changes via
_st_set_text_from_style() (which we call when receiving the
style-changed signal).

Right now we simply invalidate the text shadow every time we receive the
style-changed signal, but we're going to change that with the next
commits. To ensure the shadow still gets invalidated on CSS changed that
might affect the shadow, listen to a bunch of property changes that will
get notified when any property that affects the shadow changes.
---
 src/st/st-entry.c | 24 ++++++++++++++++++++++++
 1 file changed, 24 insertions(+)

diff --git a/src/st/st-entry.c b/src/st/st-entry.c
index 02c190158e..6496336ddd 100644
--- a/src/st/st-entry.c
+++ b/src/st/st-entry.c
@@ -562,6 +562,16 @@ clutter_text_changed_cb (GObject    *object,
   g_object_notify_by_pspec (G_OBJECT (entry), props[PROP_TEXT]);
 }
 
+static void
+invalidate_shadow_pipeline (GObject    *object,
+                            GParamSpec *pspec,
+                            StEntry    *entry)
+{
+  StEntryPrivate *priv = ST_ENTRY_PRIV (entry);
+
+  g_clear_pointer (&priv->text_shadow_material, cogl_object_unref);
+}
+
 static void
 st_entry_clipboard_callback (StClipboard *clipboard,
                              const gchar *text,
@@ -1058,6 +1068,20 @@ st_entry_init (StEntry *entry)
   g_signal_connect (priv->entry, "notify::text",
                     G_CALLBACK (clutter_text_changed_cb), entry);
 
+  /* These properties might get set from CSS using _st_set_text_from_style */
+  g_signal_connect (priv->entry, "notify::font-description",
+                    G_CALLBACK (invalidate_shadow_pipeline), entry);
+
+  g_signal_connect (priv->entry, "notify::attributes",
+                    G_CALLBACK (invalidate_shadow_pipeline), entry);
+
+  g_signal_connect (priv->entry, "notify::justify",
+                    G_CALLBACK (invalidate_shadow_pipeline), entry);
+
+  g_signal_connect (priv->entry, "notify::line-alignment",
+                    G_CALLBACK (invalidate_shadow_pipeline), entry);
+
+
   priv->spacing = 6.0f;
 
   priv->text_shadow_material = NULL;
-- 
GitLab


From 8cdf7a3e4926c9a20aa41bc870ee4b9f180be606 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Jonas=20Dre=C3=9Fler?= <verdre@v0yd.nl>
Date: Fri, 5 Mar 2021 12:46:00 +0100
Subject: [PATCH 3/6] st/label: Invalidate text shadow on style changes to
 ClutterText

Just like with the last commit, listen to some ClutterText property
changes to catch style changes that were trigerred by
_st_set_text_from_style() and invalidate the shadow spec on changes.
---
 src/st/st-label.c | 23 +++++++++++++++++++++++
 1 file changed, 23 insertions(+)

diff --git a/src/st/st-label.c b/src/st/st-label.c
index 54f16b1550..d531dc038c 100644
--- a/src/st/st-label.c
+++ b/src/st/st-label.c
@@ -301,6 +301,16 @@ st_label_class_init (StLabelClass *klass)
   g_object_class_install_properties (gobject_class, N_PROPS, props);
 }
 
+static void
+invalidate_shadow_pipeline (GObject    *object,
+                            GParamSpec *pspec,
+                            StLabel    *label)
+{
+  StLabelPrivate *priv = st_label_get_instance_private (label);
+
+  g_clear_pointer (&priv->text_shadow_pipeline, cogl_object_unref);
+}
+
 static void
 st_label_init (StLabel *label)
 {
@@ -316,6 +326,19 @@ st_label_init (StLabel *label)
   label->priv->shadow_width = -1.;
   label->priv->shadow_height = -1.;
 
+  /* These properties might get set from CSS using _st_set_text_from_style */
+  g_signal_connect (priv->label, "notify::font-description",
+                    G_CALLBACK (invalidate_shadow_pipeline), label);
+
+  g_signal_connect (priv->label, "notify::attributes",
+                    G_CALLBACK (invalidate_shadow_pipeline), label);
+
+  g_signal_connect (priv->label, "notify::justify",
+                    G_CALLBACK (invalidate_shadow_pipeline), label);
+
+  g_signal_connect (priv->label, "notify::line-alignment",
+                    G_CALLBACK (invalidate_shadow_pipeline), label);
+
   clutter_actor_add_child (actor, priv->label);
 
   clutter_actor_set_offscreen_redirect (actor,
-- 
GitLab


From f5084f704758de17708107725cf7a841d1dc7ddb Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Jonas=20Dre=C3=9Fler?= <verdre@v0yd.nl>
Date: Fri, 5 Mar 2021 12:28:39 +0100
Subject: [PATCH 4/6] st/shadow: Add a fast path to comparisons

We do this in most places in St, it's consistent to do it here, too.
---
 src/st/st-shadow.c | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/src/st/st-shadow.c b/src/st/st-shadow.c
index ab3eaa856b..b5f77cda91 100644
--- a/src/st/st-shadow.c
+++ b/src/st/st-shadow.c
@@ -124,6 +124,10 @@ st_shadow_equal (StShadow *shadow,
                  StShadow *other)
 {
   g_return_val_if_fail (shadow != NULL, FALSE);
+
+  if (shadow == other)
+    return TRUE;
+
   g_return_val_if_fail (other != NULL, FALSE);
 
   /* We use strict equality to compare double quantities; this means
-- 
GitLab


From 5f7fb8d7b7e978f031203244d26b56a90904390b Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Jonas=20Dre=C3=9Fler?= <verdre@v0yd.nl>
Date: Fri, 5 Mar 2021 12:35:26 +0100
Subject: [PATCH 5/6] st/entry: Compare shadow spec before invalidating shadow
 on style change

Instead of doing a lot of useless work every time we receive the
style-changed signal, only invalidate our text shadow pipeline in case
the shadow actually changed.
---
 src/st/st-entry.c | 24 +++++++++++++++++-------
 1 file changed, 17 insertions(+), 7 deletions(-)

diff --git a/src/st/st-entry.c b/src/st/st-entry.c
index 6496336ddd..ab4af65298 100644
--- a/src/st/st-entry.c
+++ b/src/st/st-entry.c
@@ -105,6 +105,8 @@ struct _StEntryPrivate
 
   gboolean      has_ibeam;
 
+  StShadow     *shadow_spec;
+
   CoglPipeline *text_shadow_material;
   gfloat        shadow_width;
   gfloat        shadow_height;
@@ -242,13 +244,23 @@ st_entry_style_changed (StWidget *self)
 {
   StEntryPrivate *priv = ST_ENTRY_PRIV (self);
   StThemeNode *theme_node;
+  StShadow *shadow_spec;
   ClutterColor color;
   gdouble size;
 
-  cogl_clear_object (&priv->text_shadow_material);
-
   theme_node = st_widget_get_theme_node (self);
 
+  shadow_spec = st_theme_node_get_text_shadow (theme_node);
+  if (!priv->shadow_spec || !shadow_spec ||
+      !st_shadow_equal (shadow_spec, priv->shadow_spec))
+    {
+      g_clear_pointer (&priv->text_shadow_material, cogl_object_unref);
+
+      g_clear_pointer (&priv->shadow_spec, st_shadow_unref);
+      if (shadow_spec)
+        priv->shadow_spec = st_shadow_ref (shadow_spec);
+    }
+
   _st_set_text_from_style (CLUTTER_TEXT (priv->entry), theme_node);
 
   if (st_theme_node_lookup_length (theme_node, "caret-size", TRUE, &size))
@@ -799,13 +811,11 @@ st_entry_paint (ClutterActor        *actor,
                 ClutterPaintContext *paint_context)
 {
   StEntryPrivate *priv = ST_ENTRY_PRIV (actor);
-  StThemeNode *theme_node = st_widget_get_theme_node (ST_WIDGET (actor));
-  StShadow *shadow_spec = st_theme_node_get_text_shadow (theme_node);
   ClutterActorClass *parent_class;
 
   st_widget_paint_background (ST_WIDGET (actor), paint_context);
 
-  if (shadow_spec)
+  if (priv->shadow_spec)
     {
       ClutterActorBox allocation;
       float width, height;
@@ -821,7 +831,7 @@ st_entry_paint (ClutterActor        *actor,
 
           cogl_clear_object (&priv->text_shadow_material);
 
-          material = _st_create_shadow_pipeline_from_actor (shadow_spec,
+          material = _st_create_shadow_pipeline_from_actor (priv->shadow_spec,
                                                             priv->entry);
 
           priv->shadow_width = width;
@@ -834,7 +844,7 @@ st_entry_paint (ClutterActor        *actor,
           CoglFramebuffer *framebuffer =
             clutter_paint_context_get_framebuffer (paint_context);
 
-          _st_paint_shadow_with_opacity (shadow_spec,
+          _st_paint_shadow_with_opacity (priv->shadow_spec,
                                          framebuffer,
                                          priv->text_shadow_material,
                                          &allocation,
-- 
GitLab


From fc4897b4d945e448649a58e8529e52f92a9e5a7f Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Jonas=20Dre=C3=9Fler?= <verdre@v0yd.nl>
Date: Fri, 5 Mar 2021 12:49:36 +0100
Subject: [PATCH 6/6] st/label: Compare shadow spec before invalidating shadow
 on style change

Just like with did with last commit for StEntry, check whether the text
shadow actually changed before invalidating the pipeline on style
changes of StLabel.
---
 src/st/st-label.c | 25 +++++++++++++++++++------
 1 file changed, 19 insertions(+), 6 deletions(-)

diff --git a/src/st/st-label.c b/src/st/st-label.c
index d531dc038c..0d48a47060 100644
--- a/src/st/st-label.c
+++ b/src/st/st-label.c
@@ -62,6 +62,8 @@ struct _StLabelPrivate
 {
   ClutterActor *label;
 
+  StShadow *shadow_spec;
+
   CoglPipeline *text_shadow_pipeline;
   float         shadow_width;
   float         shadow_height;
@@ -119,8 +121,21 @@ static void
 st_label_style_changed (StWidget *self)
 {
   StLabelPrivate *priv = ST_LABEL(self)->priv;
+  StThemeNode *theme_node;
+  StShadow *shadow_spec;
 
-  g_clear_pointer (&priv->text_shadow_pipeline, cogl_object_unref);
+  theme_node = st_widget_get_theme_node (self);
+
+  shadow_spec = st_theme_node_get_text_shadow (theme_node);
+  if (!priv->shadow_spec || !shadow_spec ||
+      !st_shadow_equal (shadow_spec, priv->shadow_spec))
+    {
+      g_clear_pointer (&priv->text_shadow_pipeline, cogl_object_unref);
+
+      g_clear_pointer (&priv->shadow_spec, st_shadow_unref);
+      if (shadow_spec)
+        priv->shadow_spec = st_shadow_ref (shadow_spec);
+    }
 
   _st_set_text_from_style ((ClutterText *)priv->label, st_widget_get_theme_node (self));
 
@@ -194,12 +209,10 @@ st_label_paint (ClutterActor        *actor,
                 ClutterPaintContext *paint_context)
 {
   StLabelPrivate *priv = ST_LABEL (actor)->priv;
-  StThemeNode *theme_node = st_widget_get_theme_node (ST_WIDGET (actor));
-  StShadow *shadow_spec = st_theme_node_get_text_shadow (theme_node);
 
   st_widget_paint_background (ST_WIDGET (actor), paint_context);
 
-  if (shadow_spec)
+  if (priv->shadow_spec)
     {
       ClutterActorBox allocation;
       float width, height;
@@ -222,7 +235,7 @@ st_label_paint (ClutterActor        *actor,
           priv->shadow_width = width;
           priv->shadow_height = height;
           priv->text_shadow_pipeline =
-            _st_create_shadow_pipeline_from_actor (shadow_spec,
+            _st_create_shadow_pipeline_from_actor (priv->shadow_spec,
                                                    priv->label);
         }
 
@@ -232,7 +245,7 @@ st_label_paint (ClutterActor        *actor,
 
           framebuffer =
             clutter_paint_context_get_framebuffer (paint_context);
-          _st_paint_shadow_with_opacity (shadow_spec,
+          _st_paint_shadow_with_opacity (priv->shadow_spec,
                                          framebuffer,
                                          priv->text_shadow_pipeline,
                                          &allocation,
-- 
GitLab

