From d44dcf6efdcba5f60c4e9723f5a4a17a8831921c Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Jonas=20Dre=C3=9Fler?= <verdre@v0yd.nl>
Date: Tue, 23 Feb 2021 20:11:41 +0100
Subject: [PATCH] iconGrid: Allocate using allocate_preferred_size() instead of
 using box

Handling a ClutterActorBox from JS means invoking lots of JS<->C
trampolines, and that is slow. We can easily avoid the whole box by
using clutter_actor_allocate_preferred_size() instead.

Note that this slightly changes the behavior: We now no longer enforce a
minimum size, but will allocate items a smaller size than the childSize.
Given that all children of our grid have a fixed icon size though, they
report a fixed size anyway, so that shouldn't be a problem.

This saves quite a lot of resources, in measurements of the average
duration spent in iconGrids vfunc_allocate, the time went down from
0.7 ms to 0.4 ms.
---
 js/ui/iconGrid.js | 42 ++++++++++++++----------------------------
 1 file changed, 14 insertions(+), 28 deletions(-)

diff --git a/js/ui/iconGrid.js b/js/ui/iconGrid.js
index 0272c0e233..6044cd9663 100644
--- a/js/ui/iconGrid.js
+++ b/js/ui/iconGrid.js
@@ -232,23 +232,6 @@ function zoomOutActorAtPos(actor, x, y) {
     });
 }
 
-function animateIconPosition(icon, box, nChangedIcons) {
-    if (!icon.has_allocation() || icon.allocation.equal(box) || icon.opacity === 0) {
-        icon.allocate(box);
-        return false;
-    }
-
-    icon.save_easing_state();
-    icon.set_easing_mode(Clutter.AnimationMode.EASE_OUT_QUAD);
-    icon.set_easing_delay(nChangedIcons * ICON_POSITION_DELAY);
-
-    icon.allocate(box);
-
-    icon.restore_easing_state();
-
-    return true;
-}
-
 function swap(value, length) {
     return length - value - 1;
 }
@@ -781,8 +764,6 @@ var IconGridLayout = GObject.registerClass({
         const [leftEmptySpace, topEmptySpace, hSpacing, vSpacing] =
             this._calculateSpacing(childSize);
 
-        const childBox = new Clutter.ActorBox();
-
         let nChangedIcons = 0;
         const columnsPerPage = this.columnsPerPage;
         const orientation = this._orientation;
@@ -820,17 +801,22 @@ var IconGridLayout = GObject.registerClass({
                     break;
                 }
 
-                childBox.set_origin(Math.floor(x), Math.floor(y));
+                const shouldEase = shouldEaseItems && !pageSizeChanged &&
+                    item.has_allocation() && item.opacity !== 0;
 
-                const [,, naturalWidth, naturalHeight] = item.get_preferred_size();
-                childBox.set_size(
-                    Math.max(childSize, naturalWidth),
-                    Math.max(childSize, naturalHeight));
+                if (shouldEase) {
+                    item.save_easing_state();
+                    item.set_easing_mode(Clutter.AnimationMode.EASE_OUT_QUAD);
+                    item.set_easing_delay(nChangedIcons * ICON_POSITION_DELAY);
+                }
 
-                if (!shouldEaseItems || pageSizeChanged)
-                    item.allocate(childBox);
-                else if (animateIconPosition(item, childBox, nChangedIcons))
-                    nChangedIcons++;
+                item.allocate_preferred_size(Math.floor(x), Math.floor(y));
+
+                if (shouldEase) {
+                    item.restore_easing_state();
+                    if (item.get_transition('allocation'))
+                        nChangedIcons++;
+                }
             });
         });
 
-- 
GitLab

